{"version":3,"sources":["./src/app/share-link/share-link-routing.module.ts","./src/app/user/user.component.ts","./src/app/user/user.component.html","./src/environments/environment.ts","./src/app/services/linkGeneration/link-generator.service.ts","./src/app/share-link/share-link.module.ts","./src/app/global.constants.ts","./src/app/share-link/faq-info/faq-info.component.ts","./src/app/share-link/faq-info/faq-info.component.html","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/feedback/feedback.component.ts","./src/app/feedback/feedback.component.html","./src/app/share-link/share-joining-link/share-joining-link.component.ts","./src/app/share-link/share-joining-link/share-joining-link.component.html","./src/app/services/errorHandler/error-handler.service.ts","./src/app/app-routing.module.ts","./src/app/user.service.ts","./src/main.ts","./$_lazy_route_resource lazy namespace object"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { ShareJoiningLinkComponent } from './share-joining-link/share-joining-link.component';\r\n\r\nconst routes: Routes = [\r\n  {\r\n    path: '',\r\n    component: ShareJoiningLinkComponent,\r\n  }\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forChild(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class ShareLinkRoutingModule { }\r\n","import { HttpClient, HttpHeaders } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { Globals } from '../global.constants';\r\nimport { UserService } from '../user.service';\r\n\r\n@Component({\r\n  selector: 'app-user',\r\n  templateUrl: './user.component.html',\r\n  styleUrls: ['./user.component.css']\r\n})\r\nexport class UserComponent implements OnInit {\r\n\r\n  username!: string;\r\n  token!: string;\r\n  errorMessage!: string;\r\n  preventRoomEntry = true;\r\n  noErrors = true;\r\n  loading: boolean = false;\r\n\r\n  constructor(private userService: UserService, private router: Router,\r\n    private activateRoute: ActivatedRoute, private http: HttpClient,\r\n    private snackBar: MatSnackBar) { }\r\n\r\n  ngOnInit(): void {\r\n    /* check if the room code exists\r\n    * is valid\r\n    * two people are not already in the room\r\n    * not closed\r\n    * not expired\r\n    */\r\n    this.activateRoute.params.subscribe(params => {\r\n      this.validateRoomCode(params.roomCode);\r\n    });\r\n  }\r\n\r\n  setUserName(): void {\r\n    if (this.username === undefined || this.username.trim() === '') {\r\n      this.snackBar.open('Username is required', '', {\r\n        duration: 3000\r\n      });\r\n      return;\r\n    }\r\n    this.loading = true;\r\n    const headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/json');\r\n    // before setting the username the validation happens once more just in case and the room is prepared\r\n    this.http\r\n      .get(Globals.ENDPOINT + Globals.ROOM_JOIN_ENDPOINT + this.userService.getTopicName(), { headers, responseType: 'json' })\r\n      .subscribe((response: any) => {\r\n        if (response.status === '1') {\r\n          this.userService.setUserName(this.username);\r\n          this.router.navigate(['messaging']);\r\n        }\r\n        else {\r\n          this.noErrors = false;\r\n          this.errorMessage = response.reason;\r\n        }\r\n      });\r\n  }\r\n\r\n  private setRoomCode(roomCode: string): void {\r\n    this.userService.setTopicName(roomCode);\r\n  }\r\n\r\n  validateRoomCode(roomCode: string): void {\r\n    const headers = new HttpHeaders()\r\n      .set('Content-Type', 'application/json');\r\n    this.http.get(Globals.ENDPOINT + Globals.ROOM_VALIDATE_ENDPOINT + roomCode, { headers, responseType: 'json' })\r\n      .subscribe((response: any) => {\r\n        if (response.status === '1') {\r\n          this.preventRoomEntry = false;\r\n          this.noErrors = true;\r\n          this.setRoomCode(roomCode);\r\n        }\r\n        else {\r\n          this.preventRoomEntry = true;\r\n          this.noErrors = false;\r\n          this.errorMessage = response.reason;\r\n        }\r\n      }, () => {\r\n        this.preventRoomEntry = true;\r\n        this.noErrors = false;\r\n        this.errorMessage = 'The acquaint room you are trying to join does not exist';\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"container\">\r\n<div class=\"row\" style=\"text-align: center;\">\r\n    <img class=\"banner_image\" src=\"assets/acquaint_logo.png\">\r\n</div>\r\n<br>\r\n<div *ngIf=\"loading\">\r\n    <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n</div>\r\n<br>\r\n<div *ngIf='noErrors' class=\"input-container\">\r\n    <mat-form-field appearance=\"fill\">\r\n        <mat-label>Your username</mat-label>\r\n        <input matInput type=\"text\" [(ngModel)]=\"username\" required>\r\n    </mat-form-field>    \r\n</div>\r\n<div *ngIf='noErrors' class=\"input-container\">\r\n    <button mat-raised-button color=\"primary\" (click)='setUserName()' [disabled]='preventRoomEntry'>Start!</button>\r\n</div>\r\n<mat-card *ngIf='!noErrors'>\r\n    <mat-card-content>\r\n        <p><mat-icon class=\"center-icon\" aria-hidden=\"false\" aria-label=\"error\">error</mat-icon>{{errorMessage}}</p>\r\n    </mat-card-content>\r\n</mat-card>\r\n<br>\r\n<mat-card *ngIf='noErrors'>\r\n    <mat-card-content>\r\n        <p>You are all good to go! Click start to begin. You can check out our guide below or if you want to know more about Acquaint</p>\r\n    </mat-card-content>\r\n</mat-card>\r\n<app-faq-info></app-faq-info>\r\n</div>","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { catchError } from 'rxjs/operators';\r\nimport { ErrorHandlerService } from '../errorHandler/error-handler.service';\r\nimport { Globals } from '../../global.constants';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class LinkGenerationService {\r\n  data: any;\r\n  private REST_API_SERVER = Globals.ENDPOINT + '/link';\r\n\r\n  constructor(private httpClient: HttpClient, private errorHandlerService: ErrorHandlerService) { }\r\n\r\n  public getLink(): any {\r\n    this.data = this.httpClient.get(this.REST_API_SERVER)\r\n    .pipe(\r\n           catchError(this.errorHandlerService.handleError<any>('Link Generation'))\r\n    );\r\n    return this.data;\r\n  }\r\n\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { CommonModule } from '@angular/common';\r\nimport { ShareJoiningLinkComponent } from './share-joining-link/share-joining-link.component';\r\nimport { ShareLinkRoutingModule } from './share-link-routing.module';\r\nimport {MatCardModule} from '@angular/material/card';\r\nimport {ClipboardModule} from '@angular/cdk/clipboard';\r\nimport {MatSnackBarModule} from '@angular/material/snack-bar';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { FaqInfoComponent } from './faq-info/faq-info.component';\r\nimport {MatExpansionModule} from '@angular/material/expansion';\r\n\r\n\r\n@NgModule({\r\n  declarations: [ShareJoiningLinkComponent, FaqInfoComponent],\r\n  imports: [\r\n    CommonModule,\r\n    ShareLinkRoutingModule,\r\n    MatCardModule,\r\n    ClipboardModule,\r\n    MatButtonModule,\r\n    MatSnackBarModule,\r\n    MatExpansionModule\r\n  ],\r\n  exports: [FaqInfoComponent]\r\n})\r\nexport class ShareLinkModule { }\r\n","export class Globals {\r\n    static MESSAGE_SOCKET = '/chat/';\r\n    static ENDPOINT = 'http://3.80.221.186:8080';\r\n    static ANALYTICS_TOPIC = 'analytics';\r\n    static SOCKET_ENDPOINT = '/ws-chat';\r\n    static SEND_API_ENDPOINT = '/api/send';\r\n    static ROOM_JOIN_ENDPOINT = '/join/';\r\n    static ROOM_CLOSE_ENDPOINT = '/close/';\r\n    static FEEDBACK_ENDPOINT = '/api/feedback';\r\n    static ROOM_VALIDATE_ENDPOINT = '/validate/';\r\n\r\n    static _TYPE_MESSAGE = 1;\r\n    static _TYPE_EVENT = 2;\r\n}\r\n","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Globals } from 'src/app/global.constants';\r\n\r\n@Component({\r\n  selector: 'app-faq-info',\r\n  templateUrl: './faq-info.component.html',\r\n  styleUrls: ['./faq-info.component.css']\r\n})\r\nexport class FaqInfoComponent implements OnInit {\r\n\r\n  constructor(private route: Router) { }\r\n\r\n  ngOnInit(): void {\r\n  }\r\n\r\n  goToFeedbackForm(): void {\r\n    this.route.navigate(['feedback']);\r\n  }\r\n\r\n}\r\n","<mat-accordion style=\"margin: 10px;\">\r\n    <h2>FAQs</h2>\r\n    <mat-expansion-panel>\r\n      <mat-expansion-panel-header>\r\n        <mat-panel-title>\r\n          How does Acquaint Work?\r\n        </mat-panel-title>\r\n      </mat-expansion-panel-header>\r\n      <p>\r\n          acquaint helps your friends set you up on online dates with their friends. \r\n            It’s the perfect app for matchmakers and matchfinders. We will keep adding features to speed up this process,\r\n            help you understand the person on the other side of our links, and overall have a fun time in a safe and private\r\n            environment. Stuff on Acquaint might break from time to time as we are still in our alpha stages so please forgive any\r\n            weird bugs.\r\n    </p>\r\n    </mat-expansion-panel>\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Who is Acquaint for?\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>\r\n            Acquaint is for everyone who is 18 years of age or older.\r\n        </p>\r\n      </mat-expansion-panel>\r\n    <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Safety & Privacy\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>\r\n            The team at Acquaint are really focused on your safety and privacy and do things like:\r\n        </p>\r\n        <ul>\r\n            <li>We use HTTPS and are bringing encryption of all messages on our platform</li>\r\n            <li>We do not collect any data that isn't related to our app experience</li>\r\n        </ul>\r\n        <p>\r\n            but we can't control everything. Here are some guidelines to ensure your safety:\r\n        </p>\r\n        <ul>\r\n            <li>Do not accept match making links from people you don't trust (or like)</li>\r\n            <li>Do not reveal your identity if you are uncomfortable with it</li>\r\n            <li>If you choose to go on a first time offline date, do it in a public place during the day time</li>\r\n        </ul>\r\n      </mat-expansion-panel>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            What's coming to Acquaint\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>If all works out we plan to add the following to Acquaint:</p>\r\n        <ul>\r\n            <li>More encryption and security features</li>\r\n            <li>User profiles</li>\r\n            <li>Get rid of link creation and allow match makers to match users on the app</li>\r\n            <li>Provide rewards to matchmakers and have a leaderboard (for bragging reasons)</li>\r\n        </ul>\r\n      </mat-expansion-panel>\r\n      <mat-expansion-panel>\r\n        <mat-expansion-panel-header>\r\n          <mat-panel-title>\r\n            Feedback\r\n          </mat-panel-title>\r\n        </mat-expansion-panel-header>\r\n        <p>Like or don't like something about acquaint? Let us know:</p>\r\n        <a href=\"feedback\">Feedback form</a>\r\n      </mat-expansion-panel>\r\n  </mat-accordion>\r\n  ","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css']\n})\nexport class AppComponent {\n  title = 'acquaint';\n}\n","<router-outlet></router-outlet>","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { AppComponent } from './app.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { UserComponent } from './user/user.component';\r\nimport { MatInputModule } from '@angular/material/input';\r\nimport { FormsModule } from '@angular/forms';\r\nimport { MatButtonModule } from '@angular/material/button';\r\nimport { TextFieldModule } from '@angular/cdk/text-field';\r\nimport { HttpClientModule } from '@angular/common/http';\r\nimport { MatCardModule } from '@angular/material/card';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatProgressBarModule } from '@angular/material/progress-bar';\r\nimport { ShareLinkModule } from './share-link/share-link.module';\r\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\r\nimport { FeedbackComponent } from './feedback/feedback.component';\r\nimport { ReactiveFormsModule } from '@angular/forms';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    UserComponent,\r\n    FeedbackComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    AppRoutingModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatCardModule,\r\n    MatIconModule,\r\n    FormsModule,\r\n    MatButtonModule,\r\n    TextFieldModule,\r\n    HttpClientModule,\r\n    ShareLinkModule,\r\n    MatSnackBarModule,\r\n    ReactiveFormsModule,\r\n    MatProgressBarModule\r\n  ],\r\n  bootstrap: [AppComponent],\r\n})\r\nexport class AppModule { }\r\n","import { HttpClient } from '@angular/common/http';\r\nimport { Component, OnInit } from '@angular/core';\r\nimport { FormBuilder, FormControl, FormGroup, Validators } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { Globals } from '../global.constants';\r\n\r\n@Component({\r\n  selector: 'app-feedback',\r\n  templateUrl: './feedback.component.html',\r\n  styleUrls: ['./feedback.component.css']\r\n})\r\nexport class FeedbackComponent implements OnInit{\r\n\r\n  formGroup!: FormGroup;\r\n  genderAlert: string = \"Please enter Male/Female/Others\";\r\n  recommendToFriendAlert: string = \"Please enter Yes/No/Maybe\";\r\n  userAlert: string = \"Please enter minimum 5 characters\"\r\n  loading: boolean = false;\r\n  message = {}\r\n\r\n  constructor(private router: Router, private http: HttpClient, private formBuilder: FormBuilder) { }\r\n\r\n  ngOnInit() {\r\n    this.createForm();\r\n  }\r\n\r\n  createForm() {\r\n    this.formGroup = this.formBuilder.group({\r\n      gender: [null, [Validators.required, Validators.minLength(3),Validators.maxLength(6)]],\r\n      recommendToFriend: [null, [Validators.required, Validators.minLength(2), Validators.maxLength(5)]],\r\n      userLiked: [null, [Validators.required, Validators.minLength(5)]],\r\n      userWants: [null, [Validators.required, Validators.minLength(5)]],\r\n    });\r\n  }\r\n\r\n  get recommendToFriend() {\r\n    return this.formGroup.get(\"recommendToFriend\") as FormControl;\r\n  }\r\n\r\n  onSubmit(post: any) {\r\n    this.message = JSON.stringify(post);\r\n    this.loading = true;\r\n    this.http.post(Globals.ENDPOINT + Globals.FEEDBACK_ENDPOINT, this.message,\r\n      { headers: { 'Content-Type': 'application/json; charset=utf-8' } })\r\n      .subscribe((m) => this.router.navigate(['']));\r\n  }\r\n}\r\n","<div class=\"mcontainer\">\r\n    <div class=\"container main\">\r\n        <mat-card class=\"card-container shadow-lg p-3 mb-5 bg-light rounded\">\r\n            <div>\r\n                <img class=\"banner_image\" src=\"assets/acquaint_logo.png\">\r\n            </div>\r\n            <div *ngIf=\"loading\">\r\n                <mat-progress-bar mode=\"indeterminate\"></mat-progress-bar>\r\n            </div>\r\n            <br>\r\n            <form [formGroup]=\"formGroup\" (ngSubmit)=\"onSubmit(formGroup.value)\">\r\n                <div class=\"row\">\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field>\r\n                            <mat-label>Gender</mat-label>\r\n                            <input matInput placeholder=\"Gender\" formControlName=\"gender\">\r\n                            <mat-error\r\n                                *ngIf=\"!formGroup.controls['gender'].valid && formGroup.controls['gender'].touched\">\r\n                                {{ genderAlert}}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field>\r\n                            <mat-label>Would you recommend this to a friend?</mat-label>\r\n                            <textarea matInput formControlName=\"recommendToFriend\"></textarea>\r\n                            <mat-error\r\n                                *ngIf=\"!formGroup.controls['recommendToFriend'].valid && formGroup.controls['recommendToFriend'].touched\">\r\n                                {{ recommendToFriendAlert }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field>\r\n                            <mat-label>What did you like about Acquaint?</mat-label>\r\n                            <textarea matInput placeholder=\"I liked....\" formControlName=\"userLiked\"></textarea>\r\n                            <mat-error\r\n                                *ngIf=\"!formGroup.controls['userLiked'].valid && formGroup.controls['userLiked'].touched\">\r\n                                {{ userAlert }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <mat-form-field>\r\n                            <mat-label>What do you think we could do better?</mat-label>\r\n                            <textarea matInput placeholder=\"I liked....\" formControlName=\"userWants\"></textarea>\r\n                            <mat-error\r\n                                *ngIf=\"!formGroup.controls['userWants'].valid && formGroup.controls['userWants'].touched\">\r\n                                {{ userAlert }}\r\n                            </mat-error>\r\n                        </mat-form-field>\r\n                    </div>\r\n                    <div class=\"col-12\">\r\n                        <button mat-raised-button color=\"primary\" type=\"submit\" class=\"button\"\r\n                            [disabled]=\"!formGroup.valid\">Submit Form</button>\r\n                    </div>\r\n                </div>\r\n            </form>\r\n        </mat-card>\r\n    </div>\r\n</div>","import { Component, OnInit } from '@angular/core';\r\nimport { Clipboard } from '@angular/cdk/clipboard';\r\nimport { MatSnackBar } from '@angular/material/snack-bar';\r\nimport { LinkGenerationService } from 'src/app/services/linkGeneration/link-generator.service';\r\n\r\n@Component({\r\n  selector: 'app-share-joining-link',\r\n  templateUrl: './share-joining-link.component.html',\r\n  styleUrls: ['./share-joining-link.component.css']\r\n})\r\n\r\nexport class ShareJoiningLinkComponent implements OnInit {\r\n  shareLink = '';\r\n\r\n  constructor(private clipboard: Clipboard, private snackBar: MatSnackBar, private linkService: LinkGenerationService) {\r\n\r\n  }\r\n\r\n  ngOnInit(): void {\r\n    this.getLink();\r\n  }\r\n\r\n  copyLink(): void {\r\n    this.clipboard.copy(this.shareLink);\r\n    this.snackBar.open('Link Copied! You can now paste it anywhere!', '', {\r\n      duration: 3000\r\n    });\r\n  }\r\n\r\n  copyShareText(): void {\r\n    const message = `Hey! I would like you to meet my friend using this link: ${this.shareLink}. I think you two would hit it off well ;)`;\r\n    this.clipboard.copy(message);\r\n    this.snackBar.open('Message Copied to your clipboard! You can now paste it anywhere!', '', {\r\n      duration: 3000\r\n    });\r\n  }\r\n\r\n  getLink(): void {\r\n    this.linkService.getLink()\r\n      .subscribe((data: any) => {\r\n          this.shareLink = data.link;\r\n      });\r\n  }\r\n\r\n}\r\n","<div class=\"mcontainer\">\r\n  <div class=\"container main\">\r\n    <mat-card class=\"card-container shadow-lg p-3 mb-5 bg-light rounded\">\r\n      <div>\r\n        <img class=\"banner_image\" src=\"assets/acquaint_logo.png\">\r\n      </div>\r\n      <div class=\"heading\">How it works:</div>\r\n      <ul>\r\n        <li>Copy and send the message or link below to the two people you want to match. Make sure to not change it!</li>\r\n        <li>Those two people will click on the link, they can set their username and get into a acquaint room</li>\r\n        <li>Chat it up on acquaint. We know acquaint is an awesome app, but the goal is to stop chatting online and go on an offline date when everything is safe!</li>\r\n        <li>Leave us feedback on how we can improve. It really helps us out</li>\r\n      </ul>\r\n\r\n      <div class=\"heading\">Set up your friends using the link below</div>\r\n      <hr>\r\n      <div class=\"sub-heading\">Pro tip: You can copy the message or just the link!</div>\r\n      <div class=\"row\">\r\n          <div class=\"col-12\">\r\n            <mat-card class=\"link_share_text\" id='link_share_text'>\r\n              Hey! I would like you to meet my friend using this link: {{shareLink}}. I think you two would hit it off well ;)\r\n            </mat-card>\r\n          </div>\r\n      </div>\r\n      <div class=\"row\">\r\n        <div class=\"col-12\">\r\n          <button mat-raised-button color=\"primary\" (click)='copyShareText()' style=\"margin-right: 5px;\">Copy</button>\r\n          <button mat-raised-button color=\"accent\" (click)='copyLink()'>Copy Link</button>\r\n        </div>\r\n      </div>\r\n      <app-faq-info></app-faq-info>\r\n    </mat-card>\r\n  </div>\r\n</div>","import { Injectable } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { Observable, of } from 'rxjs';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\n\r\nexport class ErrorHandlerService {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  /**\r\n  * Handle Http operation that failed.\r\n  * Let the app continue.\r\n  * @param operation - name of the operation that failed\r\n  * @param result - optional value to return as the observable result\r\n  */\r\n  public handleError<T>(operation = 'operation', result?: T) {\r\n    return (error: any): Observable<T> => {\r\n      console.error(error);\r\n      // Let the app keep running by returning an empty result.\r\n      if (error.status == 401)\r\n        this.router.navigate([`/error/401`]);\r\n      else if (error.status == 504)\r\n        this.router.navigate([`/error/504`]);\r\n      else if (error.status == 403 || error.status == 401)\r\n        this.router.navigate([`/error/401`])\r\n      else if (error.status == 500) {\r\n        if (result)\r\n          return of(result as T);\r\n        else\r\n          this.router.navigate([`/error/500`]);\r\n      }\r\n      return of(result as T);\r\n    };\r\n  }\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule } from '@angular/router';\r\nimport { FeedbackComponent } from './feedback/feedback.component';\r\nimport { UserComponent } from './user/user.component';\r\n\r\nconst routes: Routes = [\r\n  { path: 'messaging', loadChildren: () => import('./messaging/messaging.module').then(m => m.MessagingModule) },\r\n  { path: 'set-me-up/:roomCode', component: UserComponent},\r\n  { path: '', loadChildren: () => import('./share-link/share-link.module').then(m => m.ShareLinkModule) },\r\n  { path: 'feedback', component: FeedbackComponent },\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","import { Injectable } from '@angular/core';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class UserService {\r\n\r\n  private username!: string;\r\n  private topicName!: string;\r\n\r\n  constructor() {}\r\n\r\n  setUserName(username: string): void {\r\n    this.username = username;\r\n  }\r\n\r\n  getUserName(): string {\r\n    return this.username;\r\n  }\r\n\r\n  setTopicName(topic: string): void {\r\n    this.topicName = topic;\r\n  }\r\n\r\n  getTopicName(): string {\r\n    return this.topicName;\r\n  }\r\n\r\n}\r\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n","function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"zn8P\";"],"sourceRoot":"webpack:///"}